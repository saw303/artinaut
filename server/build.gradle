apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    testAnnotationProcessor("io.micronaut.data:micronaut-data-processor")

    implementation project(":${rootProject.name}-domain")
    implementation project(":${rootProject.name}-services")
    implementation "ch.onstructive.commons:onstructive-commons-micronaut-commons:${onstructiveCommons}"
    implementation "ch.onstructive.commons:onstructive-commons-micronaut-jackson-commons:${onstructiveCommons}"
    implementation "ch.onstructive.commons:onstructive-commons-micronaut-rest-commons:${onstructiveCommons}"

    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.flywaydb:flyway-mysql")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")

    testImplementation("org.testcontainers:mariadb")
    testImplementation("org.testcontainers:spock")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("com.squareup.okhttp3:mockwebserver:4.10.0")

    testImplementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    testImplementation "ch.onstructive.commons:onstructive-commons-micronaut-test:${onstructiveCommons}"
}

graalvmNative.toolchainDetection = false

application {
    mainClass.set("io.wangler.artinaut.Application")
}

tasks.named("dockerfile") {
    baseImage = "openjdk:17.0.2-jdk-slim-buster"
    instruction """RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*"""
    instruction """HEALTHCHECK --start-period=3s --interval=5s CMD curl -s localhost:8080/endpoints/health | grep '"status":"UP"' """
}

tasks.named("dockerfileNative") {
    baseImage('gcr.io/distroless/cc-debian10')
}
