plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2" apply false
    id "io.micronaut.application" version "${micronautGradlePluginVersion}" apply false
    id "io.micronaut.library" version "${micronautGradlePluginVersion}" apply false
    id 'ch.onstructive.gradle.release' version "${onstructiveGradlePluginVersion}" apply false
    id 'ch.onstructive.gradle.codestyle' version "${onstructiveGradlePluginVersion}" apply false
    id 'ch.onstructive.gradle.hbm2ddl' version "${onstructiveGradlePluginVersion}" apply false
}

subprojects { subproject ->

    apply plugin: 'groovy'
    apply plugin: 'ch.onstructive.gradle.release'
    apply plugin: 'ch.onstructive.gradle.codestyle'

    group = "io.wangler.artinaut"

    if (subproject.name == "${rootProject.name}-server") {
        apply plugin: 'io.micronaut.application'
    } else {
        apply plugin: 'io.micronaut.library'
    }

    micronaut {
        runtime("netty")
        testRuntime("spock2")
        processing {
            incremental(true)
            annotations("io.wangler.artinaut.*")
        }
    }

    java {
        sourceCompatibility = JavaVersion.toVersion("17")
        targetCompatibility = JavaVersion.toVersion("17")
    }

    dependencies {
        annotationProcessor("org.projectlombok:lombok")
        annotationProcessor("io.micronaut:micronaut-http-validation")
        annotationProcessor("io.micronaut.security:micronaut-security-annotations")
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        implementation("io.micronaut:micronaut-http-client")
        implementation("io.micronaut:micronaut-jackson-databind")
        implementation("io.micronaut.security:micronaut-security")

        implementation("jakarta.annotation:jakarta.annotation-api")
        compileOnly("org.projectlombok:lombok")
        implementation("io.micronaut:micronaut-validation")

        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        implementation "ch.onstructive.commons:onstructive-commons-java-commons:${onstructiveCommons}"
        implementation "ch.onstructive.commons:onstructive-commons-micronaut-commons:${onstructiveCommons}"
    }
}
